// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { AccessControlGroupsListData, AccessControlGroupsListResponses, AccessControlGroupsCreateData, AccessControlGroupsCreateResponses, AccessControlGroupsDestroyData, AccessControlGroupsDestroyResponses, AccessControlGroupsRetrieveData, AccessControlGroupsRetrieveResponses, AccessControlGroupsPartialUpdateData, AccessControlGroupsPartialUpdateResponses, AccessControlGroupsUpdateData, AccessControlGroupsUpdateResponses, AccessControlPermissionsListData, AccessControlPermissionsListResponses, AccessControlPermissionsCreateData, AccessControlPermissionsCreateResponses, AccessControlPermissionsDestroyData, AccessControlPermissionsDestroyResponses, AccessControlPermissionsRetrieveData, AccessControlPermissionsRetrieveResponses, AccessControlPermissionsPartialUpdateData, AccessControlPermissionsPartialUpdateResponses, AccessControlPermissionsUpdateData, AccessControlPermissionsUpdateResponses, AccessControlResourcesListData, AccessControlResourcesListResponses, AccessControlResourcesRetrieveData, AccessControlResourcesRetrieveResponses, AccessControlUsersListData, AccessControlUsersListResponses, AccessControlUsersCreateData, AccessControlUsersCreateResponses, AccessControlUsersDestroyData, AccessControlUsersDestroyResponses, AccessControlUsersRetrieveData, AccessControlUsersRetrieveResponses, AccessControlUsersPartialUpdateData, AccessControlUsersPartialUpdateResponses, AccessControlUsersUpdateData, AccessControlUsersUpdateResponses, AuthApiaccessDestroyData, AuthApiaccessDestroyResponses, AuthApiaccessRetrieveData, AuthApiaccessRetrieveResponses, AuthApiaccessCreateData, AuthApiaccessCreateResponses, AuthLoginCreateData, AuthLoginCreateResponses, AuthLogoutCreateData, AuthLogoutCreateResponses, AuthLogoutallCreateData, AuthLogoutallCreateResponses, AuthRefreshCreateData, AuthRefreshCreateResponses, AuthSessionsListData, AuthSessionsListResponses, AuthSessionsDestroyData, AuthSessionsDestroyResponses, EnvironmentsListData, EnvironmentsListResponses, EnvironmentsCreateData, EnvironmentsCreateResponses, EnvironmentsDestroyData, EnvironmentsDestroyResponses, EnvironmentsRetrieveData, EnvironmentsRetrieveResponses, EnvironmentsPartialUpdateData, EnvironmentsPartialUpdateResponses, EnvironmentsUpdateData, EnvironmentsUpdateResponses, GroupsListData, GroupsListResponses, GroupsCreateData, GroupsCreateResponses, GroupsDestroyData, GroupsDestroyResponses, GroupsRetrieveData, GroupsRetrieveResponses, GroupsPartialUpdateData, GroupsPartialUpdateResponses, GroupsUpdateData, GroupsUpdateResponses, UpdateMembersData, UpdateMembersResponses, OrganizationsListData, OrganizationsListResponses, OrganizationsCreateData, OrganizationsCreateResponses, OrganizationsDestroyData, OrganizationsDestroyResponses, OrganizationsRetrieveData, OrganizationsRetrieveResponses, OrganizationsPartialUpdateData, OrganizationsPartialUpdateResponses, OrganizationsUpdateData, OrganizationsUpdateResponses, UsersListData, UsersListResponses, UsersCreateData, UsersCreateResponses, UsersDestroyData, UsersDestroyResponses, UsersRetrieveData, UsersRetrieveResponses, UsersPartialUpdateData, UsersPartialUpdateResponses, UsersUpdateData, UsersUpdateResponses, UsersMeRetrieveData, UsersMeRetrieveResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const accessControlGroupsList = <ThrowOnError extends boolean = false>(options?: Options<AccessControlGroupsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AccessControlGroupsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/',
        ...options
    });
};

export const accessControlGroupsCreate = <ThrowOnError extends boolean = false>(options: Options<AccessControlGroupsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AccessControlGroupsCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlGroupsDestroy = <ThrowOnError extends boolean = false>(options: Options<AccessControlGroupsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<AccessControlGroupsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/{id}/',
        ...options
    });
};

export const accessControlGroupsRetrieve = <ThrowOnError extends boolean = false>(options: Options<AccessControlGroupsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AccessControlGroupsRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/{id}/',
        ...options
    });
};

export const accessControlGroupsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlGroupsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<AccessControlGroupsPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlGroupsUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlGroupsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<AccessControlGroupsUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/groups/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlPermissionsList = <ThrowOnError extends boolean = false>(options?: Options<AccessControlPermissionsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AccessControlPermissionsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/',
        ...options
    });
};

export const accessControlPermissionsCreate = <ThrowOnError extends boolean = false>(options: Options<AccessControlPermissionsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AccessControlPermissionsCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlPermissionsDestroy = <ThrowOnError extends boolean = false>(options: Options<AccessControlPermissionsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<AccessControlPermissionsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/{id}/',
        ...options
    });
};

export const accessControlPermissionsRetrieve = <ThrowOnError extends boolean = false>(options: Options<AccessControlPermissionsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AccessControlPermissionsRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/{id}/',
        ...options
    });
};

export const accessControlPermissionsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlPermissionsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<AccessControlPermissionsPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlPermissionsUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlPermissionsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<AccessControlPermissionsUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/permissions/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlResourcesList = <ThrowOnError extends boolean = false>(options?: Options<AccessControlResourcesListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AccessControlResourcesListResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/resources/',
        ...options
    });
};

export const accessControlResourcesRetrieve = <ThrowOnError extends boolean = false>(options: Options<AccessControlResourcesRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AccessControlResourcesRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/resources/{id}/',
        ...options
    });
};

export const accessControlUsersList = <ThrowOnError extends boolean = false>(options?: Options<AccessControlUsersListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AccessControlUsersListResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/',
        ...options
    });
};

export const accessControlUsersCreate = <ThrowOnError extends boolean = false>(options: Options<AccessControlUsersCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AccessControlUsersCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlUsersDestroy = <ThrowOnError extends boolean = false>(options: Options<AccessControlUsersDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<AccessControlUsersDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/{id}/',
        ...options
    });
};

export const accessControlUsersRetrieve = <ThrowOnError extends boolean = false>(options: Options<AccessControlUsersRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AccessControlUsersRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/{id}/',
        ...options
    });
};

export const accessControlUsersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlUsersPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<AccessControlUsersPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const accessControlUsersUpdate = <ThrowOnError extends boolean = false>(options: Options<AccessControlUsersUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<AccessControlUsersUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/access-control/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Durin's APIAccessTokenView.
 *
 * - ``GET`` -> get token-client pair info
 * - ``POST`` -> create and get token-client pair info
 * - ``DELETE`` -> delete existing API access token
 *
 * .. versionadded:: 1.0.0
 */
export const authApiaccessDestroy = <ThrowOnError extends boolean = false>(options?: Options<AuthApiaccessDestroyData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<AuthApiaccessDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/apiaccess/',
        ...options
    });
};

/**
 * Durin's APIAccessTokenView.
 *
 * - ``GET`` -> get token-client pair info
 * - ``POST`` -> create and get token-client pair info
 * - ``DELETE`` -> delete existing API access token
 *
 * .. versionadded:: 1.0.0
 */
export const authApiaccessRetrieve = <ThrowOnError extends boolean = false>(options?: Options<AuthApiaccessRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AuthApiaccessRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/apiaccess/',
        ...options
    });
};

/**
 * Durin's APIAccessTokenView.
 *
 * - ``GET`` -> get token-client pair info
 * - ``POST`` -> create and get token-client pair info
 * - ``DELETE`` -> delete existing API access token
 *
 * .. versionadded:: 1.0.0
 */
export const authApiaccessCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthApiaccessCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthApiaccessCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/apiaccess/',
        ...options
    });
};

/**
 * Durin's Login View.
 *
 * This view will return a JSON response when valid ``username``, ``password`` and
 * (if not overwritten) ``client`` fields are POSTed to the view using
 * form data or JSON.
 *
 * It uses the default serializer provided by
 * Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
 * to validate the user credentials.
 *
 * It is possible to customize LoginView behaviour by overriding the following
 * helper methods:
 */
export const authLoginCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthLoginCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthLoginCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/login/',
        ...options
    });
};

/**
 * Durin's Logout View.
 *
 * This view accepts only a post request with an empty body.
 * It responds to Durin Token Authentication. On a successful request,
 *
 * 1. The token used to authenticate is deleted from
 * the database and can no longer be used to authenticate.
 *
 * 2. :meth:`django.contrib.auth.signals.user_logged_out` is called.
 *
 * :returns: 204 (No content)
 */
export const authLogoutCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthLogoutCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthLogoutCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/logout/',
        ...options
    });
};

/**
 * Durin's LogoutAllView.
 *
 * This view accepts only a post request with an empty body. It responds to Durin Token
 * Authentication.
 * On a successful request,
 *
 * 1. The token used to authenticate, and **all other tokens**
 * registered to the same ``User`` account, are deleted from the
 * system and can no longer be used to authenticate.
 *
 * 2. :meth:`django.contrib.auth.signals.user_logged_out` is called.
 *
 * :returns: 204 (No content)
 */
export const authLogoutallCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthLogoutallCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthLogoutallCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/logoutall/',
        ...options
    });
};

/**
 * Durin's Refresh View
 *
 * This view accepts only a post request with an empty body.
 * It responds to Durin Token Authentication. On a successful request,
 *
 * 1. The given token's expiry is extended by it's associated
 * :py:attr:`durin.models.Client.token_ttl`
 * duration and a JSON object will be returned containing a single ``expiry``
 * key as the new timestamp for when the token expires.
 *
 * 2. :meth:`durin.signals.token_renewed` is called.
 */
export const authRefreshCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthRefreshCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthRefreshCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/refresh/',
        ...options
    });
};

/**
 * Durin's TokenSessionsViewSet.
 *
 * - Returns list of active sessions of authed user.
 * - Only ``list()`` and ``delete()`` operations.
 *
 * .. versionadded:: 1.0.0
 */
export const authSessionsList = <ThrowOnError extends boolean = false>(options?: Options<AuthSessionsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AuthSessionsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/sessions/',
        ...options
    });
};

/**
 * Durin's TokenSessionsViewSet.
 *
 * - Returns list of active sessions of authed user.
 * - Only ``list()`` and ``delete()`` operations.
 *
 * .. versionadded:: 1.0.0
 */
export const authSessionsDestroy = <ThrowOnError extends boolean = false>(options: Options<AuthSessionsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<AuthSessionsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/sessions/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsList = <ThrowOnError extends boolean = false>(options?: Options<EnvironmentsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<EnvironmentsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsCreate = <ThrowOnError extends boolean = false>(options: Options<EnvironmentsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<EnvironmentsCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsDestroy = <ThrowOnError extends boolean = false>(options: Options<EnvironmentsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<EnvironmentsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsRetrieve = <ThrowOnError extends boolean = false>(options: Options<EnvironmentsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<EnvironmentsRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<EnvironmentsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<EnvironmentsPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const environmentsUpdate = <ThrowOnError extends boolean = false>(options: Options<EnvironmentsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<EnvironmentsUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/environments/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsList = <ThrowOnError extends boolean = false>(options?: Options<GroupsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GroupsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsCreate = <ThrowOnError extends boolean = false>(options: Options<GroupsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GroupsCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsDestroy = <ThrowOnError extends boolean = false>(options: Options<GroupsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<GroupsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsRetrieve = <ThrowOnError extends boolean = false>(options: Options<GroupsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GroupsRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<GroupsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<GroupsPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const groupsUpdate = <ThrowOnError extends boolean = false>(options: Options<GroupsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<GroupsUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const updateMembers = <ThrowOnError extends boolean = false>(options: Options<UpdateMembersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateMembersResponses, unknown, ThrowOnError>({
        url: '/api/v1/groups/{id}/members/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const organizationsList = <ThrowOnError extends boolean = false>(options?: Options<OrganizationsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<OrganizationsListResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/',
        ...options
    });
};

export const organizationsCreate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<OrganizationsCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const organizationsDestroy = <ThrowOnError extends boolean = false>(options: Options<OrganizationsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<OrganizationsDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options
    });
};

export const organizationsRetrieve = <ThrowOnError extends boolean = false>(options: Options<OrganizationsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<OrganizationsRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options
    });
};

export const organizationsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<OrganizationsPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const organizationsUpdate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<OrganizationsUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersList = <ThrowOnError extends boolean = false>(options?: Options<UsersListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<UsersListResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersCreate = <ThrowOnError extends boolean = false>(options: Options<UsersCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UsersCreateResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersDestroy = <ThrowOnError extends boolean = false>(options: Options<UsersDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<UsersDestroyResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersRetrieve = <ThrowOnError extends boolean = false>(options: Options<UsersRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<UsersRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<UsersPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UsersPartialUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersUpdate = <ThrowOnError extends boolean = false>(options: Options<UsersUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UsersUpdateResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const usersMeRetrieve = <ThrowOnError extends boolean = false>(options?: Options<UsersMeRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<UsersMeRetrieveResponses, unknown, ThrowOnError>({
        url: '/api/v1/users/me/',
        ...options
    });
};