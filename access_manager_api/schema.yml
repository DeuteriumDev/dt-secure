openapi: 3.0.3
info:
  title: ""
  version: 0.0.0
paths:
  /api/v1/access-control/environments/:
    get:
      operationId: access_control_environments_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEnvironmentList"
          description: ""
    post:
      operationId: access_control_environments_create
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Environment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Environment"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Environment"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
          description: ""
  /api/v1/access-control/environments/{id}/:
    get:
      operationId: access_control_environments_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this environment.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
          description: ""
    put:
      operationId: access_control_environments_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this environment.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Environment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Environment"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Environment"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
          description: ""
    patch:
      operationId: access_control_environments_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this environment.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEnvironment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedEnvironment"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedEnvironment"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
          description: ""
    delete:
      operationId: access_control_environments_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this environment.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/access-control/groups/:
    get:
      operationId: access_control_groups_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResourceUserGroupList"
          description: ""
    post:
      operationId: access_control_groups_create
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUserGroup"
          description: ""
  /api/v1/access-control/groups/{id}/:
    get:
      operationId: access_control_groups_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user group.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUserGroup"
          description: ""
    put:
      operationId: access_control_groups_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user group.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourceUserGroup"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUserGroup"
          description: ""
    patch:
      operationId: access_control_groups_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user group.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedResourceUserGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedResourceUserGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedResourceUserGroup"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUserGroup"
          description: ""
    delete:
      operationId: access_control_groups_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user group.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/access-control/permissions/:
    get:
      operationId: access_control_permissions_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResourcePermissionList"
          description: ""
    post:
      operationId: access_control_permissions_create
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePermission"
          description: ""
  /api/v1/access-control/permissions/{id}/:
    get:
      operationId: access_control_permissions_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource permission.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePermission"
          description: ""
    put:
      operationId: access_control_permissions_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource permission.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourcePermission"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePermission"
          description: ""
    patch:
      operationId: access_control_permissions_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource permission.
          required: true
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedResourcePermission"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedResourcePermission"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedResourcePermission"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePermission"
          description: ""
    delete:
      operationId: access_control_permissions_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource permission.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/access-control/resources/:
    get:
      operationId: access_control_resources_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResourceUserPermissionList"
          description: ""
  /api/v1/access-control/resources/{id}/:
    get:
      operationId: access_control_resources_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user permission.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUserPermission"
          description: ""
  /api/v1/access-control/users/:
    get:
      operationId: access_control_users_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResourceUserList"
          description: ""
    post:
      operationId: access_control_users_create
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourceUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourceUser"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUser"
          description: ""
  /api/v1/access-control/users/{id}/:
    get:
      operationId: access_control_users_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUser"
          description: ""
    delete:
      operationId: access_control_users_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this resource user.
          required: true
      tags:
        - access-control
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/access-control/users/with_group/:
    post:
      operationId: access_control_users_with_group_create
      tags:
        - access-control
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourceUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResourceUser"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUser"
          description: ""
  /api/v1/auth/apiaccess/:
    get:
      operationId: auth_apiaccess_retrieve
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
    post:
      operationId: auth_apiaccess_create
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
    delete:
      operationId: auth_apiaccess_destroy
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
  /api/v1/auth/logoutall/:
    post:
      operationId: auth_logoutall_create
      description: |-
        Durin's LogoutAllView.

        This view accepts only a post request with an empty body. It responds to Durin Token
        Authentication.
        On a successful request,

        1. The token used to authenticate, and **all other tokens**
           registered to the same ``User`` account, are deleted from the
           system and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
  /api/v1/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Durin's Refresh View

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The given token's expiry is extended by it's associated
           :py:attr:`durin.models.Client.token_ttl`
           duration and a JSON object will be returned containing a single ``expiry``
           key as the new timestamp for when the token expires.

        2. :meth:`durin.signals.token_renewed` is called.
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          description: No response body
  /api/v1/auth/sessions/:
    get:
      operationId: auth_sessions_list
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TokenSessions"
          description: ""
  /api/v1/auth/sessions/{id}/:
    delete:
      operationId: auth_sessions_destroy
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auth token.
          required: true
      tags:
        - auth
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/groups/:
    get:
      operationId: groups_list
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created
          schema:
            type: string
            format: date-time
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: query
          name: hidden
          schema:
            type: boolean
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: parent
          schema:
            type: string
            format: uuid
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: updated
          schema:
            type: string
            format: date-time
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCustomGroupList"
          description: ""
    post:
      operationId: groups_create
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomGroup"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomGroup"
          description: ""
  /api/v1/groups/{id}/:
    get:
      operationId: groups_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this custom group.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomGroup"
          description: ""
    put:
      operationId: groups_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this custom group.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomGroup"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomGroup"
          description: ""
    patch:
      operationId: groups_partial_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this custom group.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCustomGroup"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedCustomGroup"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedCustomGroup"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomGroup"
          description: ""
    delete:
      operationId: groups_destroy
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this custom group.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/groups/{id}/members/:
    put:
      operationId: update_members
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: created__gte
          schema:
            type: string
        - in: query
          name: created__lte
          schema:
            type: string
        - in: query
          name: description__contains
          schema:
            type: string
        - in: query
          name: description__exact
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this custom group.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
        - in: query
          name: name__exact
          schema:
            type: string
        - in: query
          name: parent__exact
          schema:
            type: string
        - in: query
          name: parent__in
          schema:
            type: string
        - in: query
          name: parent__isnull
          schema:
            type: string
        - in: query
          name: updated__gte
          schema:
            type: string
        - in: query
          name: updated__lte
          schema:
            type: string
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: string
                    format: uuid
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ""
  /api/v1/organizations/:
    get:
      operationId: organizations_list
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - organizations
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOrganizationList"
          description: ""
    post:
      operationId: organizations_create
      tags:
        - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
  /api/v1/organizations/{id}/:
    get:
      operationId: organizations_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this organization.
          required: true
      tags:
        - organizations
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
    put:
      operationId: organizations_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this organization.
          required: true
      tags:
        - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
    patch:
      operationId: organizations_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this organization.
          required: true
      tags:
        - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedOrganization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedOrganization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedOrganization"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
    delete:
      operationId: organizations_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this organization.
          required: true
      tags:
        - organizations
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - users
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCustomUserList"
          description: ""
    post:
      operationId: users_create
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomUser"
        required: true
      security:
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUser"
          description: ""
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUser"
          description: ""
    put:
      operationId: users_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomUser"
        required: true
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUser"
          description: ""
    patch:
      operationId: users_partial_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedCustomUser"
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUser"
          description: ""
    delete:
      operationId: users_destroy
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      security:
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: users_me_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
        - in: query
          name: date_joined
          schema:
            type: string
        - in: query
          name: email__contains
          schema:
            type: string
        - in: query
          name: first_name__contains
          schema:
            type: string
        - in: query
          name: first_name__exact
          schema:
            type: string
        - in: query
          name: groups__id__exact
          schema:
            type: string
        - in: query
          name: groups__id__in
          schema:
            type: string
        - in: query
          name: id__exact
          schema:
            type: string
        - in: query
          name: id__in
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: string
        - in: query
          name: last_name__contains
          schema:
            type: string
        - in: query
          name: last_name__exact
          schema:
            type: string
      tags:
        - users
      security:
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUser"
          description: ""
components:
  schemas:
    CustomGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/CustomMembers"
          readOnly: true
        name:
          type: string
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
      required:
        - created
        - id
        - member_count
        - members
        - name
        - updated
    CustomMembers:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
        - avatar
        - date_joined
        - email
        - first_name
        - id
        - last_name
    CustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        groups:
          type: array
          items:
            $ref: "#/components/schemas/CustomUserGroup"
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
        - date_joined
        - email
        - groups
        - id
    CustomUserGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
        - id
        - name
    Environment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          maxLength: 200
        pg_url:
          type: string
          format: uri
        parent_org:
          type: string
          format: uuid
        auth_user:
          type: string
          format: uuid
        default_resource_group:
          type: string
          format: uuid
          nullable: true
      required:
        - auth_user
        - created
        - id
        - name
        - parent_org
        - pg_url
        - updated
        - url
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
      required:
        - created
        - id
        - name
        - updated
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        host:
          type: string
          pattern: ^[a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\.?$
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        root:
          allOf:
            - $ref: "#/components/schemas/Nested"
          readOnly: true
      required:
        - created
        - host
        - id
        - name
        - root
        - updated
    PaginatedCustomGroupList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/CustomGroup"
    PaginatedCustomUserList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/CustomUser"
    PaginatedEnvironmentList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/Environment"
    PaginatedOrganizationList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
    PaginatedResourcePermissionList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePermission"
    PaginatedResourceUserGroupList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/ResourceUserGroup"
    PaginatedResourceUserList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/ResourceUser"
    PaginatedResourceUserPermissionList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: "#/components/schemas/ResourceUserPermission"
    PatchedCustomGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/CustomMembers"
          readOnly: true
        name:
          type: string
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
    PatchedCustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        groups:
          type: array
          items:
            $ref: "#/components/schemas/CustomUserGroup"
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    PatchedEnvironment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          maxLength: 200
        pg_url:
          type: string
          format: uri
        parent_org:
          type: string
          format: uuid
        auth_user:
          type: string
          format: uuid
        default_resource_group:
          type: string
          format: uuid
          nullable: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        host:
          type: string
          pattern: ^[a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\.?$
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        root:
          allOf:
            - $ref: "#/components/schemas/Nested"
          readOnly: true
    PatchedResourcePermission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        resource_id:
          type: string
        inherit_from_parent:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        can_create:
          type: boolean
          nullable: true
        can_read:
          type: boolean
          nullable: true
        can_update:
          type: boolean
          nullable: true
        can_delete:
          type: boolean
          nullable: true
        children_permissions:
          type: string
          format: uuid
          nullable: true
        user_resource:
          type: string
          format: uuid
        group:
          type: string
          format: uuid
          nullable: true
    PatchedResourceUserGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        environment:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
    ResourcePermission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        resource_id:
          type: string
        inherit_from_parent:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        can_create:
          type: boolean
          nullable: true
        can_read:
          type: boolean
          nullable: true
        can_update:
          type: boolean
          nullable: true
        can_delete:
          type: boolean
          nullable: true
        children_permissions:
          type: string
          format: uuid
          nullable: true
        user_resource:
          type: string
          format: uuid
        group:
          type: string
          format: uuid
          nullable: true
      required:
        - created
        - id
        - resource_id
        - updated
        - user_resource
    ResourceUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        groups:
          type: array
          items:
            $ref: "#/components/schemas/ResourceUserGroup"
          readOnly: true
        environment:
          type: string
          readOnly: true
      required:
        - created
        - environment
        - groups
        - id
        - user_id
    ResourceUserGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        environment:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
      required:
        - created
        - environment
        - id
        - name
        - updated
    ResourceUserPermission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        resource_id:
          type: string
        can_create:
          type: boolean
          nullable: true
        can_read:
          type: boolean
          nullable: true
        can_update:
          type: boolean
          nullable: true
        can_delete:
          type: boolean
          nullable: true
        user_id:
          type: string
          format: uuid
          nullable: true
      required:
        - id
        - resource_id
    TokenSessions:
      type: object
      description: |-
        Used in :class:`durin.views.TokenSessionsViewSet`.

        .. versionadded:: 1.0.0
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          description: A unique identification name for the client.
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: boolean
          description: |-
            Dynamic property that returns ``True`` if token has expired,
            otherwise ``False``.
          readOnly: true
        is_current:
          type: boolean
          readOnly: true
        expires_in_str:
          type: string
      required:
        - client
        - created
        - expires_in_str
        - expiry
        - has_expired
        - id
        - is_current
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: Authentication
