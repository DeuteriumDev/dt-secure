openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/auth/apiaccess/:
    get:
      operationId: auth_apiaccess_retrieve
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_apiaccess_create
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      responses:
        '200':
          description: No response body
    delete:
      operationId: auth_apiaccess_destroy
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/logoutall/:
    post:
      operationId: auth_logoutall_create
      description: |-
        Durin's LogoutAllView.

        This view accepts only a post request with an empty body. It responds to Durin Token
        Authentication.
        On a successful request,

        1. The token used to authenticate, and **all other tokens**
           registered to the same ``User`` account, are deleted from the
           system and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Durin's Refresh View

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The given token's expiry is extended by it's associated
           :py:attr:`durin.models.Client.token_ttl`
           duration and a JSON object will be returned containing a single ``expiry``
           key as the new timestamp for when the token expires.

        2. :meth:`durin.signals.token_renewed` is called.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/sessions/:
    get:
      operationId: auth_sessions_list
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - auth
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenSessions'
          description: ''
  /api/auth/sessions/{id}/:
    delete:
      operationId: auth_sessions_destroy
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auth token.
        required: true
      tags:
      - auth
      responses:
        '204':
          description: No response body
  /api/v1/groups/:
    get:
      operationId: v1_groups_list
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: query
        name: hidden
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: updated
        schema:
          type: string
          format: date-time
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomGroupList'
          description: ''
    post:
      operationId: v1_groups_create
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomGroup'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGroup'
          description: ''
  /api/v1/groups/{id}/:
    get:
      operationId: v1_groups_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom group.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGroup'
          description: ''
    put:
      operationId: v1_groups_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom group.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomGroup'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGroup'
          description: ''
    patch:
      operationId: v1_groups_partial_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom group.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomGroup'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGroup'
          description: ''
    delete:
      operationId: v1_groups_destroy
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom group.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      responses:
        '204':
          description: No response body
  /api/v1/groups/{id}/members/:
    put:
      operationId: update_members
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: description__contains
        schema:
          type: string
      - in: query
        name: description__exact
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom group.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__in
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ''
  /api/v1/organizations/:
    get:
      operationId: v1_organizations_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: v1_organizations_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/organizations/{id}/:
    get:
      operationId: v1_organizations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: v1_organizations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: v1_organizations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: v1_organizations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: v1_users_list
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
    post:
      operationId: v1_users_create
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: v1_users_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: v1_users_partial_update
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: v1_users_destroy
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      responses:
        '204':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: v1_users_me_retrieve
      description: |-
        This viewset provides dynamically generated
        filters by applying defined filters on generic
        queryset.
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
      - in: query
        name: email__contains
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__exact
        schema:
          type: string
      - in: query
        name: groups__id__exact
        schema:
          type: string
      - in: query
        name: groups__id__in
        schema:
          type: string
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: id__in
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__exact
        schema:
          type: string
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    CustomGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/CustomMembers'
          readOnly: true
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        parent:
          type: string
          format: uuid
          nullable: true
      required:
      - created
      - id
      - member_count
      - members
      - name
      - updated
    CustomMembers:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - avatar
      - date_joined
      - email
      - first_name
      - id
      - last_name
    CustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        groups:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserGroup'
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - groups
      - id
    CustomUserGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        parent:
          type: string
          format: uuid
          nullable: true
      required:
      - created
      - id
      - name
      - updated
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        root:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - id
      - name
      - root
    PaginatedCustomGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomGroup'
    PaginatedCustomUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PatchedCustomGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/CustomMembers'
          readOnly: true
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
        hidden:
          type: boolean
        parent:
          type: string
          format: uuid
          nullable: true
    PatchedCustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        groups:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserGroup'
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        root:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    TokenSessions:
      type: object
      description: |-
        Used in :class:`durin.views.TokenSessionsViewSet`.

        .. versionadded:: 1.0.0
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          description: A unique identification name for the client.
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: boolean
          description: |-
            Dynamic property that returns ``True`` if token has expired,
            otherwise ``False``.
          readOnly: true
        is_current:
          type: boolean
          readOnly: true
        expires_in_str:
          type: string
      required:
      - client
      - created
      - expires_in_str
      - expiry
      - has_expired
      - id
      - is_current
